@model eDietetyk.UserMeals

<div class="container">
    <div class="form form-container">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Dodaj posiłek</h4>
                <hr />

                <div class="form-group">
                    <div class="col-md-12 ui-widget">
                        <input id="mealInput" placeholder="Wpisz nazwę produktu" type="text" class="form-control" />
                        <div id="meal-list"></div>
                        <input id="MealId" type="hidden" value="" name="MealId" />
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-3">Waga:</label>
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <hr />

                <div class="form-group">
                    <div class="col-md-6">
                        <input type="submit" value="Zapisz" class="btn btn-primary" />
                    </div>

                    <div class="col-md-6 text-right">
                        <a href="/Home/Index" class="btn btn-default">Anuluj</a>
                    </div>
                </div>
            </div>
        }





    </div>
</div>

@section scripts{
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script>

        $(document).ready(function () {
            var timer;

            $("#mealInput").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        dataType: "json",
                        url: "/Meals/GetMeals",
                        data: {
                            key: request.term
                        },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.Value,
                                    value: item.Key
                                }
                            }));
                        }
                    });
                },
                minLength: 4,

                select: function (event, ui) {
                    $('#mealInput').val(ui.item.label);
                    $('#MealId').val(ui.item.value);
                    return false;
                    
                }
            });

        })

        function loadData(data) {
            if (data && data.length > 0) {
                var container = $('#meal-list');

                [].forEach.call(data, function (meal) {

                    var div = document.createElement('div');
                    div.setAttribute('class', 'meal-list-item');
                    div.setAttribute('data-val', meal.Key);
                    div.addEventListener('click', add);
                    div.innerHTML = meal.Value;
                    container.append(div);
                })
            }
        }

        function add(e) {
            $('#mealInput').val(e.target.innerHTML);
        }
    </script>
}